class QuickSort
{
    function void Swap (Array A, int i, int j)
    {
        var int temp;
        let temp = A[i];
        let A[i] = A[j];
        let A[j] = temp;
        return;
    }

    function void QPrint (Array A, int n)
    {
        var int i;
        while(i < n)
        {
            do Output.printInt(A[i]);
            do Output.printString(" ");
            let i = i + 1;
        }
        return;
    }

    function int partition (Array A, int low, int high)
    {
        var int pivot, i, j;

        let pivot = A[high];
        let i = low - 1;
        let j = low;

        while(j < high)
        {
            if(A[j] < pivot)
            {
                let i = i + 1;
                do QuickSort.Swap(A, i, j);
            }

            let j = j + 1;
        }

        do QuickSort.Swap(A, i + 1, high);

        return (i + 1);
    }

    function void qSort (Array A, int low, int high)
    {
        var int p;

        if (low < high)
        {
            let p = QuickSort.partition(A, low, high);

            do QuickSort.qSort(A, low, p - 1);
            do QuickSort.qSort(A, p + 1, high);
        }


        return;
    }

}